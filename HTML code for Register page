<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .register-container {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 300px;
        }

        h2 {
            text-align: center;
            margin-bottom: 20px;
        }

.input-group {
            margin-bottom: 20px;
        }

        .input-group label {
            display: block;
            margin-bottom: 5px;
        }

        .input-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .error-message {
            color: red;
            font-size: 12px;
            display: none;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none
 border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .link {
            text-align: center;
            margin-top: 10px;
        }

        .link a {
            text-decoration: none;
            color: #4CAF50;
        }
    </style>
</head>
<body>
<div class="register-container">
        <h2>Register</h2>
        <form id="registerForm" onsubmit="return validateForm()">
            <div class="input-group">
                <label for="username">Username</label>
                <input type="text" id="username" name="username" placeholder="Enter your username">
                <span id="usernameError" class="error-message"></span>
            </div>
            <div class="input-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="Enter your email">
                <span id="emailError" class="error-message"></span>
            </div>
            <div class="input-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" placeholder="Enter your password">
                <span id="passwordError" class="error-message"></span>
            </div>
            <div class="input-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password">
                <span id="confirmPasswordError" class="error-message"></span>
            </div>
            <button type="submit">Register</button>
            <span id="formMessage" class="error-message"></span>
        </form>
        <div class="link">
            <p>Already have an account? <a href="login.html">Login here</a></p>
        </div>
 </div>
    <script>
        // Function to validate form fields
        function validateForm() {
            let valid = true;
            let username = document.getElementById("username").value;
            let email = document.getElementById("email").value;
            let password = document.getElementById("password").value;
            let confirmPassword = document.getElementById("confirmPassword").value;

            let usernameError = document.getElementById("usernameError");
            let emailError = document.getElementById("emailError");
            let passwordError = document.getElementById("passwordError");
            let confirmPasswordError = document.getElementById("confirmPasswordError");
            let formMessage = document.getElementById("formMessage");

            // Clear previous errors
            usernameError.style.display = "none";
            emailError.style.display = "none";
            passwordError.style.display = "none";
            confirmPasswordError.style.display = "none";
            formMessage.style.display = "none";

            // Validate username
            if (username === "") {
                usernameError.style.display = "block";
                usernameError.textContent = "Username is required.";
   valid = false;
            }

            // Validate email
            if (email === "") {
                emailError.style.display = "block";
                emailError.textContent = "Email is required.";
                valid = false;
            } else if (!validateEmail(email)) {
                emailError.style.display = "block";
                emailError.textContent = "Please enter a valid email address.";
                valid = false;
            }

            // Validate password
            if (password === "") {
                passwordError.style.display = "block";
                passwordError.textContent = "Password is required.";
                valid = false;
            } else if (password.length < 6) {
                passwordError.style.display = "block";
                passwordError.textContent = "Password must be at least 6 characters.";
                valid = false;
            }

            // Validate confirm password
if (confirmPassword === "") {
                confirmPasswordError.style.display = "block";
                confirmPasswordError.textContent = "Please confirm your password.";
                valid = false;
            } else if (confirmPassword !== password) {
                confirmPasswordError.style.display = "block";
                confirmPasswordError.textContent = "Passwords do not match.";
                valid = false;
            }

            // If any error exists, show a form-level error message
            if (!valid) {
                formMessage.style.display = "block";
                formMessage.textContent = "Please fix the errors above.";
            }

            return valid;
        }

        // Email validation function
        function validateEmail(email) {
            const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return emailPattern.test(email);
        }

        // Real-time validation feedback


        function closeCartModal() {
            document.getElementById('cart-modal').style.display = 'none';
        }

        function editCart() {
            alert('Edit functionality will be implemented later.');
        }

        function goToPayment() {
            window.location.href = 'payment.html';
        }
    </script>
</body>
</html>
